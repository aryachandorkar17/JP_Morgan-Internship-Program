From b0bed43131633459a8d94ca1a8b5c2d6b2f0ff9a Mon Sep 17 00:00:00 2001
From: Arya Chandorkar <aryachandorkar01@gmail.com>
Date: Thu, 22 Sep 2022 11:38:36 +0530
Subject: [PATCH] Create Patch File

---
 client3.py     | 78 ++++++++++++++++++++------------------------------
 client_test.py | 23 +++++++++------
 2 files changed, 45 insertions(+), 56 deletions(-)

diff --git a/client3.py b/client3.py
index f1771c3..0d38b45 100644
--- a/client3.py
+++ b/client3.py
@@ -1,59 +1,43 @@
-################################################################################
-#
-#  Permission is hereby granted, free of charge, to any person obtaining a
-#  copy of this software and associated documentation files (the "Software"),
-#  to deal in the Software without restriction, including without limitation
-#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
-#  and/or sell copies of the Software, and to permit persons to whom the
-#  Software is furnished to do so, subject to the following conditions:
-#
-#  The above copyright notice and this permission notice shall be included in
-#  all copies or substantial portions of the Software.
-#
-#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-#  DEALINGS IN THE SOFTWARE.
-
 import urllib.request
 import time
 import json
 import random
-
+ 
 # Server API URLs
 QUERY = "http://localhost:8080/query?id={}"
-
+ 
 # 500 server request
 N = 500
-
+ 
 def getDataPoint(quote):
-	""" Produce all of the needed values to generate a datapoint """
-	""" ------------- Update this function ------------- """
-	stock = quote['stock']
-	bid_price = float(quote['top_bid']['price'])
-	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
-	return stock, bid_price, ask_price, price
-
+    """ Produce all of the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = (bid_price+ask_price)/2
+    return stock, bid_price, ask_price, price
+ 
 def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
-
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    if (price_b == 0 ):
+        return
+    """ Also create some unit tests for this function in client_test.py """
+    return price_a/price_b
+ 
 # Main
 if __name__ == "__main__":
-
-	# Query the price once every N seconds.
-	for _ in iter(range(N)):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
-
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
-
-		print ("Ratio %s" % getRatio(price, price))
+ 
+    # Query the price once every N seconds.
+    for _ in range(N):
+        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+ 
+        """ ----------- Update to get the ratio --------------- """
+        prices={}
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock]=price
+            print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+ 
+        print ("Ratio %s" % (getRatio(prices['ABC'],prices['DEF'])))
\ No newline at end of file
diff --git a/client_test.py b/client_test.py
index af2bf26..0a87a8f 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,6 +1,6 @@
 import unittest
 from client3 import getDataPoint
-
+ 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
     quotes = [
@@ -8,18 +8,23 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self =.assertEqual(getDataPoint(quote), (quote['stock'],quote['top_bid']['price'],quote['top_ask']['price'],(quote['top_bid']['price']+quote['top_ask']['price'])/2))
+ 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
-
+    for quote in quotes:
+      self =.assertEqual(getDataPoint(quote), (quote['stock'],quote['top_bid']['price'],quote['top_ask']['price'],(quote['top_bid']['price']+quote['top_ask']['price'])/2))
+ 
+ 
   """ ------------ Add more unit tests ------------ """
-
-
-
-if __name__ == '__main__':
-    unittest.main()
+ 
+ 
+ 
+  if __name__ == '__main__':
+     unittest.main()
+    
\ No newline at end of file
-- 
2.37.0.windows.1

